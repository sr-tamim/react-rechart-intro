{"version":3,"sources":["components/My2ndChart/My2ndChart.js","components/MyChart/MyChart.js","App.js","reportWebVitals.js","index.js"],"names":["data","name","electronegativity","My2ndChart","style","margin","ResponsiveContainer","width","height","LineChart","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","padding","YAxis","Tooltip","Legend","Line","type","stroke","activeDot","r","ionization_energy","MyChart","AreaChart","Area","fill","App","className","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7be5a9f8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n\r\nconst data = [\r\n    {\r\n        name: 'Hydrogen',\r\n        electronegativity: 2.1,\r\n    },\r\n    {\r\n        name: 'Lithium',\r\n        electronegativity: 1,\r\n    },\r\n    {\r\n        name: 'Berilium',\r\n        electronegativity: 1.5,\r\n    },\r\n    {\r\n        name: 'Boron',\r\n        electronegativity: 2,\r\n    },\r\n    {\r\n        name: 'Carbon',\r\n        electronegativity: 2.5,\r\n    },\r\n    {\r\n        name: 'Nitrogen',\r\n        electronegativity: 3,\r\n    },\r\n    {\r\n        name: 'Oxygen',\r\n        electronegativity: 3.5,\r\n    },\r\n    {\r\n        name: 'Fluorine',\r\n        electronegativity: 4,\r\n    },\r\n    {\r\n        name: 'Sodium',\r\n        electronegativity: 0.9,\r\n    },\r\n    {\r\n        name: 'Magnetium',\r\n        electronegativity: 1.2,\r\n    },\r\n    {\r\n        name: 'Aluminium',\r\n        electronegativity: 1.5,\r\n    },\r\n    {\r\n        name: 'Silicon',\r\n        electronegativity: 1.8,\r\n    },\r\n    {\r\n        name: 'Phosphorus',\r\n        electronegativity: 2.1,\r\n    },\r\n    {\r\n        name: 'Sulphur',\r\n        electronegativity: 2.5,\r\n    },\r\n    {\r\n        name: 'Chlorine',\r\n        electronegativity: 3,\r\n    },\r\n];\r\n\r\n\r\nconst My2ndChart = () => {\r\n    return (\r\n        <div style={{ margin: '0 0 150px' }}>\r\n            <ResponsiveContainer width=\"100%\" height={600}>\r\n\r\n                <LineChart\r\n                    data={data}\r\n                    margin={{\r\n                        top: 50,\r\n                        right: 60,\r\n                        left: 50,\r\n                        bottom: 5,\r\n                    }}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" padding={{ left: 60 }} />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Line type=\"monotone\" dataKey=\"electronegativity\" stroke=\"blue\" activeDot={{ r: 12 }} />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default My2ndChart;","import React from 'react';\r\nimport { XAxis, YAxis, Tooltip, Legend, ResponsiveContainer, AreaChart, Area } from 'recharts';\r\n\r\nconst data = [\r\n    {\r\n        name: 'Lithium',\r\n        ionization_energy: 520,\r\n    },\r\n    {\r\n        name: 'Berilium',\r\n        ionization_energy: 899,\r\n    },\r\n    {\r\n        name: 'Boron',\r\n        ionization_energy: 800,\r\n    },\r\n    {\r\n        name: 'Carbon',\r\n        ionization_energy: 1086,\r\n    },\r\n    {\r\n        name: 'Nitrogen',\r\n        ionization_energy: 1402,\r\n    },\r\n    {\r\n        name: 'Oxygen',\r\n        ionization_energy: 1314,\r\n    },\r\n    {\r\n        name: 'Fluorine',\r\n        ionization_energy: 1681,\r\n    },\r\n    {\r\n        name: 'Neon',\r\n        ionization_energy: 2080,\r\n    },\r\n    {\r\n        name: 'Sodium',\r\n        ionization_energy: 496,\r\n    },\r\n    {\r\n        name: 'Magnetium',\r\n        ionization_energy: 728,\r\n    },\r\n    {\r\n        name: 'Aluminium',\r\n        ionization_energy: 578,\r\n    },\r\n    {\r\n        name: 'Silicon',\r\n        ionization_energy: 786,\r\n    },\r\n    {\r\n        name: 'Phosphorus',\r\n        ionization_energy: 1062,\r\n    },\r\n    {\r\n        name: 'Sulphur',\r\n        ionization_energy: 1007,\r\n    },\r\n    {\r\n        name: 'Chlorine',\r\n        ionization_energy: 1260,\r\n    },\r\n    {\r\n        name: 'Argon',\r\n        ionization_energy: 0,\r\n    },\r\n];\r\n\r\n\r\nconst MyChart = () => {\r\n    return (\r\n        <ResponsiveContainer width=\"100%\" height={600}>\r\n            <AreaChart\r\n                data={data}\r\n                margin={{\r\n                    top: 50,\r\n                    right: 60,\r\n                    left: 50,\r\n                    bottom: 5,\r\n                }}\r\n            >\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Area type=\"monotone\" dataKey=\"ionization_energy\" stroke=\"crimson\" fill=\"orangered\" activeDot={{ r: 10 }} />\r\n            </AreaChart>\r\n        </ResponsiveContainer>\r\n    );\r\n};\r\n\r\nexport default MyChart;","\nimport './App.css';\nimport My2ndChart from './components/My2ndChart/My2ndChart';\nimport MyChart from './components/MyChart/MyChart';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 style={{ margin: '50px 0 0', color: 'darkred' }}>Ionization Energy Trends</h1>\n      <MyChart />\n      <h1 style={{ margin: '150px 0 0', color: 'darkblue' }}>Electronegativity Trends</h1>\n      <My2ndChart />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}